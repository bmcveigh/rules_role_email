<?php

/**
 * @file
 * Contains rules_role_email.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\rules\Entity\ReactionRuleConfig;

/**
 * Implements hook_help().
 */
function rules_role_email_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the rules_role_email module.
    case 'help.page.rules_role_email':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module provides a Rules action that sends emails to users of specified roles.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add a token tree link so the user knows what tokens they can use
 * for the "Message" field.
 */
function rules_role_email_form_rules_expression_edit_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Get the rules reaction object to make sure we only add the token tree
  // link to the 'forum_topic_needs_moderation' rule reaction.
  // We do not want this to get added to other reaction rule action forms.
  $reaction_config = Drupal::routeMatch()->getParameter('rules_reaction_rule');

  if ($reaction_config instanceof ReactionRuleConfig) {
    $rules_action_config = $reaction_config->getExpression()->getConfiguration();
    $rules_action_id = isset($rules_action_config['actions']['actions'][0]['action_id']) ? $rules_action_config['actions']['actions'][0]['action_id'] : '';

    if ($rules_action_id != 'role_email_action') {
      return;
    }
  }

  if (isset($form['context']['message'])) {
    $form['context']['message']['token_help'] = [
      '#title' => t('Replacement patterns'),
      '#type' => 'fieldset',
    ];
    $form['context']['message']['token_help']['tokens'] = [
      '#theme' => 'token_tree_link',
      '#token_types' => ['node'],
      '#global_types' => FALSE,
      '#click_insert' => TRUE,
    ];
  }
}
